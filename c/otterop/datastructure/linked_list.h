#ifndef __otterop_datastructure_LinkedList
#define __otterop_datastructure_LinkedList
#include <otterop/lang/oop_iterable.h>
#include <otterop/lang/oop_iterator.h>
#include <otterop/lang/panic.h>
#include <otterop/lang/pure_iterator.h>
#include <otterop/lang/string.h>
#include <otterop/lang/oop_object.h>
#include <otterop/datastructure/int/linked_list_node.h>
#include <stdint.h>

typedef struct otterop_lang_OOPIterable_s otterop_lang_OOPIterable_t;
typedef struct otterop_lang_OOPIterator_s otterop_lang_OOPIterator_t;
typedef struct otterop_lang_Panic_s otterop_lang_Panic_t;
typedef struct otterop_lang_PureIterator_s otterop_lang_PureIterator_t;
typedef struct otterop_lang_String_s otterop_lang_String_t;
typedef struct otterop_lang_OOPObject_s otterop_lang_OOPObject_t;
typedef struct otterop_datastructure_LinkedListNode_s otterop_datastructure_LinkedListNode_t;

typedef struct otterop_datastructure_LinkedList_s otterop_datastructure_LinkedList_t;




otterop_datastructure_LinkedList_t *otterop_datastructure_LinkedList_new();

otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_add_before(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *node, void *value);


void otterop_datastructure_LinkedList_add_node_before(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *node, otterop_datastructure_LinkedListNode_t *new_node);


otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_add_after(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *node, void *value);


void otterop_datastructure_LinkedList_add_node_after(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *node, otterop_datastructure_LinkedListNode_t *new_node);


otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_add_first(otterop_datastructure_LinkedList_t *self, void *value);


void otterop_datastructure_LinkedList_add_node_first(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *new_node);


otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_add_last(otterop_datastructure_LinkedList_t *self, void *value);


void otterop_datastructure_LinkedList_add_node_last(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *new_node);


void otterop_datastructure_LinkedList_clear(otterop_datastructure_LinkedList_t *self);


void otterop_datastructure_LinkedList_remove_first(otterop_datastructure_LinkedList_t *self);


void otterop_datastructure_LinkedList_remove_last(otterop_datastructure_LinkedList_t *self);


unsigned char otterop_datastructure_LinkedList_remove(otterop_datastructure_LinkedList_t *self, void *value);


void otterop_datastructure_LinkedList_remove_node(otterop_datastructure_LinkedList_t *self, otterop_datastructure_LinkedListNode_t *node);


int32_t otterop_datastructure_LinkedList_size(otterop_datastructure_LinkedList_t *self);


otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_first(otterop_datastructure_LinkedList_t *self);


otterop_datastructure_LinkedListNode_t *otterop_datastructure_LinkedList_last(otterop_datastructure_LinkedList_t *self);


otterop_lang_OOPIterator_t *otterop_datastructure_LinkedList_oop_iterator(otterop_datastructure_LinkedList_t *self);


otterop_lang_OOPIterable_t
*otterop_datastructure_LinkedList__to_otterop_lang_OOPIterable(otterop_datastructure_LinkedList_t *self);


#endif
